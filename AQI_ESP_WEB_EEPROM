//BB 030222

#include <WiFi.h>
#include <EEPROM.h>

#include <stdlib.h>

#define RXD2 14
#define TXD2 27

#define RXD3 15
#define TXD3 28

#define EEPROM_SIZE 1
 
const char* ssid     = "WIFI-DEVICE-1";
const char* password = "123456789";
 
WiFiServer server(80);
 
String header;
 
String output26State = "IPG";
int output26Statesan = 0;


String send1 = "";

byte send2[10] = {0xFF, 0x01, 0x86, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79};

int res[100];

  double pm1_val = 0;
  double pm25_val = 0;
  double pm10_val = 0;
  double co2_val = 0;
  double voc_val = 0;
  double temp_val = 0;
  double hum_val = 0;
  double ch2o_val = 0;
  double co_val = 0;
  double o3_val = 0;
  double no2_val =0;

unsigned int hexToDec(String hexString) {
  
  unsigned int decValue = 0;
  int nextInt;
  
  for (int i = 0; i < hexString.length(); i++) {
    
    nextInt = int(hexString.charAt(i));
    if (nextInt >= 48 && nextInt <= 57) nextInt = map(nextInt, 48, 57, 0, 9);
    if (nextInt >= 65 && nextInt <= 70) nextInt = map(nextInt, 65, 70, 10, 15);
    if (nextInt >= 97 && nextInt <= 102) nextInt = map(nextInt, 97, 102, 10, 15);
    nextInt = constrain(nextInt, 0, 15);
    
    decValue = (decValue * 16) + nextInt;
  }
  
  return decValue;
}
 

void setup() {

  Serial.begin(115200);
  Serial2.begin(9600, SERIAL_8N1, RXD2, TXD2);

     EEPROM.begin(EEPROM_SIZE);

     output26Statesan = EEPROM.read(0);   

    Serial.println("KAZZ : ");
    Serial.println(output26Statesan);

    Serial.println(int(output26Statesan));

     if(output26Statesan == 0)
     {
         output26State = "IPG";
         Serial.println("osindamin 1");
     }  
     else
     {
         output26State = "PHYSICS";
         Serial.println("osindamin 2");
     }


  Serial.print("Setting AP (Access Point)â€¦");

  WiFi.softAP(ssid, password);
 
  IPAddress IP = WiFi.softAPIP();
  Serial.print("AP IP address: ");
  Serial.println(IP);
  
  server.begin();
}
 
void loop()
{

//---1---
//datchikten oku boligi
for(int i=0; i<10; i++)
  {
    Serial2.write(send2[i]);  
  }

  for(int i=0; i<27; i++)
  {
    if(Serial2.available())
    {
      res[i] = Serial2.read();
      Serial.print(res[i]);     
      
    }
     
  }
  
  
  pm1_val = hexToDec(String(res[2]))*256+hexToDec(String(res[3]));
  pm25_val = hexToDec(String(res[4]))*256+hexToDec(String(res[5]));
  pm10_val = hexToDec(String(res[6]))*256+hexToDec(String(res[7]));
  co2_val = hexToDec(String(res[8]))*256+hexToDec(String(res[9]));
  voc_val = hexToDec(String(res[10]));
  temp_val = (hexToDec(String(res[11]))*256+hexToDec(String(res[12]))-500)*0.1;
  hum_val = hexToDec(String(res[13]))*256+hexToDec(String(res[14]));
  ch2o_val = (hexToDec(String(res[15]))*256+hexToDec(String(res[16])))*0.001;
  co_val = (hexToDec(String(res[17]))*256+hexToDec(String(res[18])))*0.1;
  o3_val = (hexToDec(String(res[19]))*256+hexToDec(String(res[20])))*0.01;
  no2_val = (hexToDec(String(res[21]))*256+hexToDec(String(res[22])))*0.01;
  
  Serial.print("\n pm1 : ");
  Serial.println(pm1_val);

  Serial.print("pm25 : ");
  Serial.println(pm25_val);

  Serial.print("pm10 : ");
  Serial.println(pm10_val);

  Serial.print("co2 : ");
  Serial.println(co2_val);

  Serial.print("voc : ");
  Serial.println(voc_val);

  Serial.print("pm1 : ");
  Serial.println(pm1_val);

  Serial.print("temp : ");
  Serial.println(temp_val);

  Serial.print("hum : ");
  Serial.println(hum_val);

  Serial.print("ch2o : ");
  Serial.println(ch2o_val);

  Serial.print("co : ");
  Serial.println(co_val);

  Serial.print("o3 : ");
  Serial.println(o3_val);

  Serial.print("no2 : ");
  Serial.println(no2_val);

//---1---



//---2---
//server boligi

  WiFiClient client = server.available();   
 
  if (client) {                             
    Serial.println("New Client.");          
    String currentLine = "";                
    while (client.connected()) {            
      if (client.available()) {             
        char c = client.read();            
        Serial.write(c);                    
        header += c;
        if (c == '\n') {                
        
          if (currentLine.length() == 0) {
          
            client.println("HTTP/1.1 200 OK");
            client.println("Content-type:text/html");
            client.println("Connection: close");
            client.println();
            
           
            if (header.indexOf("GET /ipgval") >= 0) {
              Serial.println("IPG");
              output26State = "IPG";
              output26Statesan = 0;

                  EEPROM.write(0, 0);
                    EEPROM.commit();
                    Serial.println("osindamin 3");
              
            } else if (header.indexOf("GET /physval") >= 0) {
              Serial.println("PHYSICS");
              output26State = "PHYSICS";
              output26Statesan = 1;

                  EEPROM.write(0, 1);
                    EEPROM.commit();
                    Serial.println("osindamin 4");
              
            } 
            
          
            client.println("<!DOCTYPE html><html>");
            client.println("<head><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">");
            client.println("<link rel=\"icon\" href=\"data:,\">");
        
            client.println("<style>html { font-family: Helvetica; display: inline-block; margin: 0px auto; text-align: center;}");
            client.println(".button { background-color: #4CAF50; border: none; color: white; padding: 16px 40px;");
            client.println("text-decoration: none; font-size: 30px; margin: 2px; cursor: pointer;}");
            client.println(".button2 {background-color: #555555;}</style></head>");
            
         
            client.println("<body><h1>idBranch tandau</h1>");
             
            client.println("<p>Kazirgi idBranch : " + output26State + "</p>");

            Serial.println("osindamin 5");
            Serial.println(output26State);
            Serial.println(output26Statesan);
                  
            if (output26State=="PHYSICS") {
              client.println("<p><a href=\"/ipgval\"><button class=\"button\">IPG</button></a></p>");
            } else {
              client.println("<p><a href=\"/physval\"><button class=\"button button2\">PHYSICS</button></a></p>");
            } 

            client.println("<p>pm1 : " + String(pm1_val) + "</p>");
            client.println("<p>pm25 : " + String(pm25_val) + "</p>");
            client.println("<p>pm10 : " + String(pm10_val) + "</p>");
            client.println("<p>co2 : " + String(co2_val) + "</p>");
            client.println("<p>voc : " + String(voc_val) + "</p>");
            client.println("<p>temp : " + String(temp_val) + "</p>");
            client.println("<p>hum : " + String(hum_val) + "</p>");
            client.println("<p>ch2o : " + String(ch2o_val) + "</p>");
            client.println("<p>co : " + String(co_val) + "</p>");
            client.println("<p>o3 : " + String(o3_val) + "</p>");
            client.println("<p>no2 : " + String(no2_val) + "</p>");               
            
            client.println("</body></html>");
            
            client.println();

            break;
          } else { 
            currentLine = "";
          }
        } else if (c != '\r') {  
          currentLine += c;    
        }
      }
    }
   
    header = "";
    
    client.stop();
    Serial.println("Client disconnected.");
    Serial.println("");
  }
}
